openapi: 3.0.0
info:
  title: Think Exchange x402 API
  version: 1.0.0
  description: Stateless AI debate API using x402 cryptocurrency payments
  contact:
    email: contact@thinkexchange.ai

servers:
  - url: https://thinkexchange.ai/api/v1
    description: Production server

paths:
  /x402/rooms:
    get:
      summary: List Council Rooms
      description: Get available AI council rooms for debates
      operationId: listRooms
      tags:
        - x402
      responses:
        '200':
          description: List of available rooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      $ref: '#/components/schemas/Room'

  /x402/tasks:
    post:
      summary: Create Debate Task
      description: Create a new AI Council debate task with x402 payment ($0.50 USDC)
      operationId: createTask
      tags:
        - x402
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - room_id
                - user_prompt
              properties:
                room_id:
                  type: string
                  description: The ID of the council room to use
                  example: "380b3b3c-29fc-43c2-8367-e29b6d52240e"
                user_prompt:
                  type: string
                  description: Your question for the AI council to debate
                  example: "Should we use microservices or monolithic architecture?"
                constraints:
                  type: object
                  properties:
                    max_rounds:
                      type: integer
                      minimum: 1
                      maximum: 10
                      default: 3
                    timeout_seconds:
                      type: integer
                      minimum: 30
                      maximum: 300
                      default: 120
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequired'
        '400':
          description: Bad Request
        '429':
          description: Too Many Requests

  /x402/tasks/{id}:
    get:
      summary: Get Task Status
      description: Check debate task status and retrieve results
      operationId: getTask
      tags:
        - x402
      parameters:
        - name: id
          in: path
          required: true
          description: The unique task identifier
          schema:
            type: string
          example: "e0ea0f93-2c9a-492f-83ce-d973cdcaa937"
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
        '404':
          description: Task not found

  /x402/tasks/{id}/messages:
    get:
      summary: Get Debate Messages
      description: Retrieve full conversation history from a debate
      operationId: getMessages
      tags:
        - x402
      parameters:
        - name: id
          in: path
          required: true
          description: The unique task identifier
          schema:
            type: string
          example: "e0ea0f93-2c9a-492f-83ce-d973cdcaa937"
      responses:
        '200':
          description: Debate messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
        '404':
          description: Task not found

components:
  schemas:
    Room:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        agent_configs:
          type: array
          items:
            type: object
        is_system:
          type: boolean
        is_public:
          type: boolean

    Task:
      type: object
      properties:
        id:
          type: string
        room_id:
          type: string
        status:
          type: string
          enum: [pending, in_progress, completed, failed]
        created_at:
          type: string
          format: date-time
        payment_method:
          type: string
          enum: [x402]

    TaskDetail:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            user_prompt:
              type: string
            updated_at:
              type: string
              format: date-time
            result:
              type: object
              properties:
                summary:
                  type: string
                consensus:
                  type: string
                disagreements:
                  type: array
                  items:
                    type: string
                recommendations:
                  type: array
                  items:
                    type: string
                confidence:
                  type: string
                  enum: [low, medium, high]

    Message:
      type: object
      properties:
        id:
          type: string
        task_id:
          type: string
        role:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: date-time
        metadata:
          type: object
          properties:
            round:
              type: integer
            model:
              type: string
            tokens:
              type: object
              properties:
                input:
                  type: integer
                output:
                  type: integer
                total:
                  type: integer
            latency_ms:
              type: integer

    PaymentRequired:
      type: object
      properties:
        x402Version:
          type: integer
        error:
          type: string
        accepts:
          type: array
          items:
            type: object
            properties:
              scheme:
                type: string
              network:
                type: string
              maxAmountRequired:
                type: string
              resource:
                type: string
              payTo:
                type: string
              maxTimeoutSeconds:
                type: integer
              asset:
                type: string

tags:
  - name: x402
    description: Stateless x402 payment endpoints
